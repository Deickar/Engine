
/********************************************************************************/
/*						TODO AND THINGS OF THAT SORT							*/
/********************************************************************************/

* RTW shadowmapping
* Bullet collision detection. Start with marching cubes meshes. Should be easy enough.  
	- http://bulletphysics.org/mediawiki-1.5.8/index.php/Hello_World + http://bulletphysics.org/mediawiki-1.5.8/index.php/Code_Snippets
* Clean up Renderer code. Start moving things to World.

* Data oriented container.	-> http://molecularmusings.wordpress.com/2013/07/24/adventures-in-data-oriented-design-part-3c-external-references/
							-> http://bitsquid.blogspot.se/2011/09/managing-decoupling-part-4-id-lookup.html

"The sparse (outer) array stores indices into the dense (inner) array, and a generation for each item. 
This generation is our monotonically increasing integer that was introduced last time. 
The dense array stores the items contiguously in memory, just like a regular array."

Which means that we have:
struct Handle
{
	int16 ID, //used to index into the index array
	int16 generation //must match with the index generation so that we know we aren't accessing stale data
}

struct Index
{
	int16 generation, //must match with the handle generation so that we know we aren't accessing stale data
	int16 index, //real index into the real dense array inside that actually contains objects
	//Here possibly a ... ptr? to the next relevant index.. but that's silly, just use a min/maxheap ?
}


* Make geometry shader grass more fancy.
	-Should pretty much be finished now, just need to do the lookup-based-on-height thing.

* Water normal texture sliding thing that they do in arma2
* Skysphere texture mapping!!! Clouds? Stars?
* Shadow&Light manager...?
* Some sort of XML loader/reader for configs / keybindings / texture&material IDs


======== Idea regarding multithreading the terrain generation =============

You just have a function that is like AddFinishedChunkToMap(ChunkPointer val) with a ...mutex? in it.

So whenever one of the threads has created a chunk, it will lock the map, add its thing, then go to the next.

Can I call the same function with several threads? Or just use one separate thread dedicated to generation?

============================================================================


########## Idea regarding vegetation lookup table ##################

First you have a lookup texture, a 1DTextureArray that has the same amount of textures as you have height in the world. You index into this texture array with the grassquad's worldPos.Y
Each texture has the first pixel allocated to the amount of textures there are. So you read the first pixel value to know how many textures there are in this texture.
Then, when you know how many textures there are, you randomly select which texture you want to use. And then Load(1+RandomVal). 1+ because you don't want to use the first pixel in the texture.

Then you use the loaded texture ID to sample from your texture2DArray

###################################################################

/*
*******THE LINK DUNGEON*******

Rendering and general layout of rendering system:
http://gamedev.stackexchange.com/questions/22080/which-of-these-directx11-calls-actually-sends-data-to-the-gpu
http://www.dataorienteddesign.com/dodmain/node14.html
http://www.bitsquid.se/presentations/benefits-of-a-data-driven-renderer.pdf

Entity system:
http://www.gameprogblog.com/managing-entities/#more-79

Directional light lens flare:
http://www.madgamedev.com/post/2010/04/21/Article-Sun-and-Lens-Flare-as-a-Post-Process.aspx
http://stackoverflow.com/questions/14161727/hlsl-drawing-a-centered-circle
if dot(cameraDirection, lightDirection) == -1 then they're both facing opposite ways I think

Multithreading:
http://gamedev.stackexchange.com/questions/2116/multi-threaded-game-engine-design-resources
http://www.gamasutra.com/view/feature/1830/multithreaded_game_engine_.php
http://www.gamasutra.com/view/feature/2463/threading_3d_game_engine_basics.php
http://bitsquid.blogspot.se/2010/03/task-management-practical-example.html
*/