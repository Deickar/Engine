/////////////
// GLOBALS //
/////////////
Texture2D shaderTexture[2];
SamplerState SampleType;

//////////////
// TYPEDEFS //
//////////////
struct PixelInputType
{
	float4 Position : SV_POSITION;
	float2 TexCoord : TEXCOORD0;
	int TextureID : TEXCOORD1;
};

struct PixelShaderOutput
{
	half4 Color : SV_TARGET0; //R8G8B8A8
	half4 Normal : SV_TARGET1; //R8G8B8A8
	float Depth : SV_TARGET2; //R32
};

////////////////////////////////////////////////////////////////////////////////
// Pixel Shader
////////////////////////////////////////////////////////////////////////////////
PixelShaderOutput VegetationQuadPixelShader(PixelInputType input)
{
	PixelShaderOutput output;

	output.Color = half4(0.0f, 0.0f, 0.0f, 0.0f);
	half4 tempColor = output.Color;

	//TODO: 3D textures.....
	if(input.TextureID == 0)
	{
		tempColor = shaderTexture[0].Sample(SampleType, input.TexCoord);
	}
	else
	{
		tempColor = shaderTexture[1].Sample(SampleType, input.TexCoord);
	}

	if(tempColor.a >= 0.3f)
	{
		tempColor.a = 1.0f;
		output.Color = tempColor;
	}
	
	output.Depth = (input.Position.z / input.Position.w);
	output.Normal = half4(0.0f, 0.5f, 0.0f, 128.0f);

	return output;
}