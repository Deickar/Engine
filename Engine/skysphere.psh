/////////////
// GLOBALS //
/////////////
cbuffer GradientBuffer
{
    float4 ApexColor;
    float4 CenterColor;
	float4 AntapexColor;
};


//////////////
// TYPEDEFS //
//////////////
struct PixelInputType
{
    float4 Position : SV_POSITION;
    float4 DomePosition : TEXCOORD0;
};


////////////////////////////////////////////////////////////////////////////////
// Pixel Shader
////////////////////////////////////////////////////////////////////////////////
float4 SkyspherePixelShader(PixelInputType input) : SV_TARGET0
{
    float height;
    float4 outputColor;


    // Determine the position on the sky dome where this pixel is located.
    height = input.DomePosition.y;

	//TODO: change it to horizontally...  .... width = input.DomePosition.x?

    // The value ranges from -1.0f to +1.0f so change it to only positive values.
    if(height < 0.0)
    {
        height = 0.0f;
    }

    // Determine the gradient color by interpolating between the apex and center based on the height of the pixel in the sky dome.
    outputColor = lerp(centerColor, apexColor, height);

    return outputColor;
}